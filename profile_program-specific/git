email=`echo 'onjthan@aamcniechsne.t' | sed -e "s/\(.\)\(.\)\(.\)/\3\1\2/g"`

export GIT_COMMITTER_NAME=Jonathan\ Camenisch
export GIT_COMMITTER_EMAIL=$email
export GIT_AUTHOR_NAME=Jonathan\ Camenisch
export GIT_AUTHOR_EMAIL=$email

safe_alias g git
is_executable ga || ga () { git add $* && git status }
safe_alias gbi  "git bisect"
safe_alias gbl  "git blame"
safe_alias gbmd 'git branch --merged | grep -v "\*" | xargs -n 1 git branch -d'
safe_alias gb   "git branch"
safe_alias gbd  "git branch -d"
safe_alias gbD  "git branch -D"
safe_alias gc   "git checkout"
safe_alias gc1  "git checkout HEAD~1"
safe_alias gca  "git commit --amend"
safe_alias gcac "git commit --amend -CHEAD"
safe_alias gcb  "git checkout -b"
safe_alias gcm  "git commit -m"
safe_alias gd   "git diff"
safe_alias gd1  "git diff HEAD~1"
safe_alias gdc  "git diff --cached"
safe_alias gdm  "git diff master"

is_executable gdmb || gdmb() { # Diff a branch against its merge-base with another branch
  ref1=master
  ref2=HEAD

  [[ -n "$1" ]] && (git rev-parse "$1" 2>&1 >/dev/null || (ref1=$1 && shift))
  [[ -n "$1" ]] && (git rev-parse "$1" 2>&1 >/dev/null || (ref2=$1 && shift))

  base=`git merge-base $ref1 $ref2`

  git diff $base $ref2 $*
}

safe_alias gdw   "git diff --ignore-all-space"
safe_alias gg    "git grep"
safe_alias gh    "git help"
safe_alias gl    "git log"
safe_alias gl1   "git log -1"
safe_alias glhm  "git log HEAD..master"
safe_alias glmh  "git log master..HEAD"
safe_alias gloh  "git log origin/master..HEAD"
safe_alias glho  "git log HEAD..origin/master"
safe_alias gm    "git merge"
safe_alias gpl   "git pull"
safe_alias gplr  "git pull --rebase"
safe_alias gps   "git push"
safe_alias gpso  "git push origin"
safe_alias gpsu  "git push -u"
safe_alias gpshm "git push heroku master"
safe_alias gpspm "git push production master"
safe_alias gpssm "git push stage master"
safe_alias gr    "git rebase"
safe_alias grc   "git rebase --continue"
safe_alias grm   "git rebase master"
safe_alias gruo  "git remote update origin"
safe_alias gst   "git status"
safe_alias gsh   "git stash"
safe_alias gsha  "git stash apply"
safe_alias gshl  "git stash list"
safe_alias gshp  "git stash pop"
safe_alias gsl   "git shortlog"
safe_alias gu    "git update"

if is_executable git-ftp; then
  passwd_arg=p
  [[ `uname` == "Darwin" ]] && passwd_arg=k
  alias gfp="git ftp push -$passwd_arg"
fi

is_executable gg_replace || gg_replace() {
  if [[ "$#" == "0" ]]; then
    echo 'Usage:'
    echo '  gg_replace term replacement file_mask'
    echo
    echo 'Example:'
    echo '  gg_replace cappuchino cappuccino *.html'
    echo
  else
    find=$1; shift
    replace=$1; shift

    ORIG_GLOBIGNORE=$GLOBIGNORE
    GLOBIGNORE=*.*
    
    if [[ "$#" = "0" ]]; then
      set -- ' ' $@
    fi

    while [[ "$#" -gt "0" ]]; do
      for file in `git grep -l "$find" -- $1`; do
        if [[ $(uname) = 'Darwin' ]]; then
          #for BSD flavors of sed (sorry to not check for non-Mac systems :( )
          sed -e "s/$find/$replace/g" -i '' $file
        else
          #for Linux's flavor of sed
          sed -e "s/$find/$replace/g" -i $file
        fi
      done
      shift
    done

    GLOBIGNORE=$ORIG_GLOBIGNORE
  fi
}

is_executable gg_dasherize || gg_dasherize() {
  gg_replace $1 `echo $1 | sed -e 's/_/-/g'` $2
}
