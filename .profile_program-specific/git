email=`echo 'onjthan@aamcniechsne.t' | sed -e "s/\(.\)\(.\)\(.\)/\3\1\2/g"`

export GIT_COMMITTER_NAME=Jonathan\ Camenisch
export GIT_COMMITTER_EMAIL=$email
export GIT_AUTHOR_NAME=Jonathan\ Camenisch
export GIT_AUTHOR_EMAIL=$email
ga () { git add $* && git status ; }
alias gbi="git bisect"
alias gbl="git blame"
alias gbmd='git branch --merged | grep -v "\*" | xargs -n 1 git branch -d'
alias gb="git branch"
alias gbd="git branch -d"
alias gbD="git branch -D"
alias gc="git checkout"
alias gc1="git checkout HEAD~1"
alias gca="git commit --amend"
alias gcac="git commit --amend -CHEAD"
alias gcb="git checkout -b"
alias gcm="git commit -m"
alias gd="git diff"
alias gd1="git diff HEAD~1"
alias gdc="git diff --cached"
alias gdm="git diff master"

gdmb() { # Diff a branch against its merge-base with another branch
  ref1=master
  ref2=HEAD

  [[ -n "$1" ]] && (git rev-parse "$1" 2>&1 >/dev/null || (ref1=$1 && shift))
  [[ -n "$1" ]] && (git rev-parse "$1" 2>&1 >/dev/null || (ref2=$1 && shift))

  base=`git merge-base $ref1 $ref2`

  git diff $base $ref2 $*
}

alias gdw="git diff --ignore-all-space"
alias gg="git grep"
alias gh="git help"
alias gl="git log"
alias gl1="git log -1"
alias glhm="git log HEAD..master"
alias glmh="git log master..HEAD"
alias gm="git merge"
alias gpl="git pull"
alias gplr="git pull --rebase"
alias gps="git push"
alias gpso="git push origin"
alias gpsu="git push -u"
alias gpshm="git push heroku master"
alias gpspm="git push production master"
alias gpssm="git push stage master"
alias gr="git rebase"
alias grc="git rebase --continue"
alias grm="git rebase master"
alias gruo="git remote update origin"
alias gs="git status"
alias gsh="git stash"
alias gsha="git stash apply"
alias gshl="git stash list"
alias gshp="git stash pop"
alias gsl="git shortlog"
alias gu="git update"
if which git-ftp>/dev/null; then
  passwd_arg=p
  [[ `uname` == "Darwin" ]] && passwd_arg=k
  alias gfp="git ftp push -$passwd_arg"
fi
gg_replace() {
  if [[ "$#" == "0" ]]; then
    echo 'Usage:'
    echo '  gg_replace term replacement file_mask'
    echo
    echo 'Example:'
    echo '  gg_replace cappuchino cappuccino *.html'
    echo
  else
    find=$1; shift
    replace=$1; shift

    ORIG_GLOBIGNORE=$GLOBIGNORE
    GLOBIGNORE=*.*
    
    if [[ "$#" = "0" ]]; then
      set -- ' ' $@
    fi

    while [[ "$#" -gt "0" ]]; do
      for file in `git grep -l "$find" -- $1`; do
        if [[ $(uname) = 'Darwin' ]]; then
          #for BSD flavors of sed (sorry to not check for non-Mac systems :( )
          sed -e "s/$find/$replace/g" -i '' $file
        else
          #for Linux's flavor of sed
          sed -e "s/$find/$replace/g" -i $file
        fi
      done
      shift
    done

    GLOBIGNORE=$ORIG_GLOBIGNORE
  fi
}
gg_dasherize() {
  gg_replace $1 `echo $1 | sed -e 's/_/-/g'` $2
}
